{"version":3,"sources":["services/person.js","components/People.js","components/AddPeople.js","components/FindPeople.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","People","persons","findName","deletePersonFrom","length","map","names","name","number","onClick","event","filter","e","AddPeople","addNameNumber","newName","handleNameChange","handleNumberChange","newNumber","onSubmit","value","onChange","type","FindPeople","handleNameFind","Notification","message","className","Error","App","useState","setPersons","setNewName","setNewNumber","findNameInList","setMessage","error","setError","useEffect","console","log","personService","initialPersons","target","preventDefault","person","includes","window","confirm","checkName","find","returned","catch","setTimeout","returnedName","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d11c825a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n};\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    deletePerson,\r\n    update\r\n}","import React from 'react'\r\n\r\nconst People = ({persons, findName, deletePersonFrom}) => ((findName.length === 0)\r\n    ? persons.map(names => <p key={names.id}>\r\n        {names.name}\r\n        {names.number}\r\n        <button onClick={(event) => deletePersonFrom(names.id)}>delete</button>\r\n    </p>)\r\n    : persons.filter(e => e.name === findName).map(names => <p key={names.id}>\r\n        {names.name}\r\n        {names.number}\r\n        <button onClick={(event) => deletePersonFrom(names.id)}>delete</button>\r\n    </p>))\r\n\r\nexport default People","import React from 'react'\r\n\r\nconst AddPeople = ({addNameNumber, newName, handleNameChange, handleNumberChange, newNumber}) => {\r\n    return <form onSubmit={addNameNumber}>\r\n        <div>\r\n            name:\r\n            <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n        <div>number:\r\n            <input value={newNumber} onChange={handleNumberChange}/></div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n\r\n}\r\n\r\nexport default AddPeople","import React from 'react'\r\n\r\nconst FindPeople = ({findName, handleNameFind}) => {\r\n    return <div>\r\n        find name:\r\n        <input value={findName} onChange={handleNameFind}/>\r\n    </div>\r\n}\r\n\r\nexport default FindPeople","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Error = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error","import React, {useState, useEffect} from 'react'\r\nimport personService from './services/person'\r\nimport './index.css'\r\nimport People from './components/People'\r\nimport AddPeople from './components/AddPeople'\r\nimport FindPeople from './components/FindPeople'\r\nimport Notification from './components/Notification'\r\nimport Error from './components/Error'\r\n\r\nconst App = () => {\r\n    const [persons,\r\n        setPersons] = useState([]) //initial state of names in phone book\r\n    const [newName,\r\n        setNewName] = useState('')\r\n    const [newNumber,\r\n        setNewNumber] = useState('')\r\n    const [findName,\r\n        findNameInList] = useState('')\r\n    const [message,\r\n        setMessage] = useState(null)\r\n    const [error,\r\n        setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        console.log('effect')\r\n        personService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                console.log('promise fulfilled')\r\n                setPersons(initialPersons)\r\n            })\r\n    }, [])\r\n\r\n    const addNameNumber = (event) => { //function to add new name into phonebook\r\n        event.preventDefault()\r\n        const newObject = {\r\n            name: newName,\r\n            number: newNumber,\r\n            id: persons.length + 1\r\n        }\r\n\r\n        const names = persons.map(person => person.name)\r\n\r\n        const checkNames = (names.includes(newName))\r\n        if (checkNames) {\r\n            const result = window.confirm(`${newName} is already added to phonebook. Replace the phone number with the new one?`)\r\n            if (result) {\r\n                const checkName = persons.find(person => person.name === newName)\r\n                checkName.number = newNumber\r\n                personService\r\n                    .update(checkName.id, checkName)\r\n                    .then(returned => {\r\n                        setPersons(persons.map(person => person.id !== returned.id\r\n                            ? person\r\n                            : returned))\r\n                        setMessage(`Updated number for '${newName}'`)\r\n                    })\r\n                    .catch(error => {\r\n                        setError(`Information for '${newName}'`)\r\n                    })\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                        setError(null)\r\n                    }, 5000)\r\n            }\r\n\r\n        } else {\r\n            personService\r\n                .create(newObject)\r\n                .then(returnedName => {\r\n                    setPersons(persons.concat(returnedName))\r\n                    setMessage(`Added '${newName}'`)\r\n                })\r\n                .catch(error => {\r\n                    setError(`Information for '${newName}' can not be added. Number should have at least 8 digits and name should contain at least 3 symbols`)\r\n                })\r\n                setNewName('')\r\n            setNewNumber('')\r\n            findNameInList('')\r\n        }\r\n    }\r\n\r\n    const deletePersonFrom = (id) => {\r\n        const result = window.confirm(\"Confirm delete\")\r\n\r\n        if (result) {\r\n            personService\r\n                .deletePerson(id)\r\n                .then(setPersons(persons.filter(person => person.id !== id)))\r\n                .catch(error => {\r\n                    setError(`Information for '${newName}' has been removed from server`)\r\n                })\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                    setError(null)\r\n                }, 5000)\r\n        }\r\n\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleNameFind = (event) => {\r\n        findNameInList(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification message={message}/>\r\n            <Error message={error}/>\r\n            <FindPeople findName={findName} handleNameFind={handleNameFind}/>\r\n            <h2>Add a new</h2>\r\n            <AddPeople\r\n                addNameNumber={addNameNumber}\r\n                newName={newName}\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n                newNumber={newNumber}/>\r\n            <h2>Numbers</h2>\r\n\r\n            <People\r\n                persons={persons}\r\n                findName={findName}\r\n                deletePersonFrom={deletePersonFrom}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}